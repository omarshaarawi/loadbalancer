services:
  loadbalancer-prequal:
    build: .
    container_name: lb-prequal
    ports:
      - "8080:8080"
    networks:
      - loadbalancer-net
    environment:
      - BACKEND_SERVER1=server1
      - BACKEND_SERVER2=server2
      - BACKEND_SERVER3=server3
      - LB_ALGORITHM=prequal
    depends_on:
      - server1
      - server2
      - server3

  loadbalancer-rr:
    build: .
    container_name: lb-roundrobin
    ports:
      - "8081:8080"
    networks:
      - loadbalancer-net
    environment:
      - BACKEND_SERVER1=server1
      - BACKEND_SERVER2=server2
      - BACKEND_SERVER3=server3
      - LB_ALGORITHM=roundrobin
    depends_on:
      - server1
      - server2
      - server3

  server1:
    build: ./backend
    container_name: server1
    networks:
      - loadbalancer-net
    environment:
      - SERVER_ID=server1
      - PORT=80
      - CPU_LOAD=60
    cpus: 1.0

  server2:
    build: ./backend
    container_name: server2
    networks:
      - loadbalancer-net
    environment:
      - SERVER_ID=server2
      - PORT=80
      - CPU_LOAD=60
    cpus: 1.0

  server3:
    build: ./backend
    container_name: server3
    networks:
      - loadbalancer-net
    environment:
      - SERVER_ID=server3
      - PORT=80
      - CPU_LOAD=0
    cpus: 1.0

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - loadbalancer-net

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - loadbalancer-net
    depends_on:
      - prometheus

networks:
  loadbalancer-net:
    driver: bridge
